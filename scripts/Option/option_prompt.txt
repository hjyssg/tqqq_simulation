"""
	一个金融计算题。
	我在11月5日买入当前spy价外的10%的call。call的到期日期是5月25日。
	到了1月15日，spx已经上涨了10%。
	这张call大概涨多少
"""


"""
一个金融计算题。
我想在11月5日买入当前spy价外的call。
我预计到了1月15日，spx会上涨了10%。
我该买什么什么行权价和行权日来最大化利润

选择到期日：
	到期日越长，期权的时间价值越高，但时间衰减（Theta）影响越小。
	为了在1月15日之前最大化利润，建议选择至少在1月15日之后到期的期权。
选择行权价：
	选择价外期权（OTM）以获得较大的杠杆效应。
	如果你预计SPX会上涨10%，选择一个行权价接近预计的上涨目标价。

"""



----------
我有一个股票数据csv文件

-----------------------------------
Date,Open,High,Low,Close,Adj Close,Volume
1971-02-05,100.000000,100.000000,100.000000,100.000000,100.000000,0
1971-02-08,100.839996,100.839996,100.839996,100.839996,100.839996,0
1971-02-09,100.760002,100.760002,100.760002,100.760002,100.760002,0
1971-02-10,100.690002,100.690002,100.690002,100.690002,100.690002,0

帮我写个脚本。进行可视化期权价格变化。
可视化我在2023买入2025年6月到期的略高于价外的spy call。
假设利率和波动率不变。

-------------------
import pandas as pd
import os
import pandas as pd
import matplotlib.pyplot as plt
import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))) # 将util.py所在的目录添加到系统路径中
import _util
data = _util.load_csv_as_dataframe("^NDX.csv")  # data is dataframe

# 只在意二战后的数据
data = data[data['Date'].dt.year > 2023]

#...从这里开始续写实际实现。

# 避免乱码
plt.rcParams['font.sans-serif'] = ['SimHei']  # 用黑体显示中文
plt.rcParams['axes.unicode_minus'] = False  # 正确显示负号
